set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"


set-option -g prefix C-Space
unbind C-Space
bind C-Space send-prefix

set -g base-index 1

# Easy config reload
bind-key R source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mouse on


bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
# bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind-key -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind-key C-l send-keys 'C-l'

bind-key C-o rotate-window

# bind-key ` run-shell -b '\
#     popup_id="popup_$(tmux display-message -p "##{session_id}" | cut -d"\$" -f2)"; \
#     if test "$(echo #{session_name} | cut -d"_" -f 1)" = "popup" ; then \
#         tmux detach-client; \
#     else \
#         tmux popup -d "#{pane_current_path}" -xC -yC -w80% -h75% \
#             -E "tmux attach -t \"${popup_id}\" || tmux new -s \"${popup_id}\" "; \
#     fi; \
# '

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"


# to avoid nvim escape delay
set -sg escape-time 10

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on


# Enable native Mac OS X copy/paste
# set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# resurrect save and restore
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

run '~/.tmux/plugins/tpm/tpm'
set -g @catppuccin_flavour 'frappe' # latte or frappe, macchiato, mocha
# set -g @catppuccin_window_status_enable "yes"
# set -g @catppuccin_window_left_separator "█"
# set -g @catppuccin_window_middle_separator "█"
# set -g @catppuccin_window_status_icon_enable "yes"
# set -g @catppuccin_icon_window_last "󰖰"
set -g @catppuccin_icon_window_current "󰖯"
set -g @catppuccin_icon_window_zoom "󰁌"
set -g @catppuccin_icon_window_mark "󰃀"
set -g @catppuccin_icon_window_silent "󰂛"
set -g @catppuccin_icon_window_activity "󰖲"
set -g @catppuccin_icon_window_bell "󰂞"

set-option -g default-shell /usr/bin/zsh
bind-key q set-option status

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'catppuccin/tmux'

run '~/.tmux/plugins/tpm/tpm'
